(function(k){function d(a){if(b[a])return b[a].exports;var c=b[a]={exports:{},id:a,loaded:!1};k[a].call(c.exports,c,c.exports,d);c.loaded=!0;return c.exports}var b={};d.m=k;d.c=b;d.p="";return d(0)})([function(k,d){AFRAME.registerComponent("rounded",{schema:{enabled:{"default":!0},width:{type:"number","default":1},height:{type:"number","default":1},radius:{type:"number","default":.1},topLeftRadius:{type:"number","default":-1},topRightRadius:{type:"number","default":-1},bottomLeftRadius:{type:"number",
"default":-1},bottomRightRadius:{type:"number","default":-1},color:{type:"color","default":"#F0F0F0"},opacity:{type:"number","default":1}},init:function(){this.rounded=new THREE.Mesh(this.draw(),new THREE.MeshPhongMaterial({color:new THREE.Color(this.data.color),side:THREE.DoubleSide}));this.updateOpacity();this.el.setObject3D("mesh",this.rounded)},update:function(){this.data.enabled?this.rounded&&(this.rounded.visible=!0,this.rounded.geometry=this.draw(),this.rounded.material.color=new THREE.Color(this.data.color),
this.updateOpacity()):this.rounded.visible=!1},updateOpacity:function(){0>this.data.opacity&&(this.data.opacity=0);1<this.data.opacity&&(this.data.opacity=1);this.rounded.material.transparent=1>this.data.opacity?!0:!1;this.rounded.material.opacity=this.data.opacity},tick:function(){},remove:function(){this.rounded&&(this.el.object3D.remove(this.rounded),this.rounded=null)},draw:function(){var b=new THREE.Shape,a=[this.data.radius,this.data.radius,this.data.radius,this.data.radius];-1!=this.data.topLeftRadius&&
(a[0]=this.data.topLeftRadius);-1!=this.data.topRightRadius&&(a[1]=this.data.topRightRadius);-1!=this.data.bottomLeftRadius&&(a[2]=this.data.bottomLeftRadius);-1!=this.data.bottomRightRadius&&(a[3]=this.data.bottomRightRadius);var c=this.data.width,e=this.data.height,f=a[0],g=a[1],h=a[2];a=a[3];f||(f=1E-5);g||(g=1E-5);h||(h=1E-5);a||(a=1E-5);b.moveTo(0,0+f);b.lineTo(0,0+e-f);b.quadraticCurveTo(0,0+e,0+f,0+e);b.lineTo(0+c-g,0+e);b.quadraticCurveTo(0+c,0+e,0+c,0+e-g);b.lineTo(0+c,0+a);b.quadraticCurveTo(0+
c,0,0+c-a,0);b.lineTo(0+h,0);b.quadraticCurveTo(0,0,0,0+h);return new THREE.ShapeBufferGeometry(b)},pause:function(){},play:function(){}});AFRAME.registerPrimitive("a-rounded",{defaultComponents:{rounded:{}},mappings:{enabled:"rounded.enabled",width:"rounded.width",height:"rounded.height",radius:"rounded.radius","top-left-radius":"rounded.topLeftRadius","top-right-radius":"rounded.topRightRadius","bottom-left-radius":"rounded.bottomLeftRadius","bottom-right-radius":"rounded.bottomRightRadius",color:"rounded.color",
opacity:"rounded.opacity"}})}]);